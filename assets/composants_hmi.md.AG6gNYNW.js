import{_ as t,E as n,c as l,m as i,a as s,J as r,a4 as a,o}from"./chunks/framework.CRhGRqNS.js";const q=JSON.parse('{"title":"STONE HMI","description":"","frontmatter":{},"headers":[],"relativePath":"composants/hmi.md","filePath":"composants/hmi.md"}'),h={name:"composants/hmi.md"},p=a('<h1 id="stone-hmi" tabindex="-1">STONE HMI <a class="header-anchor" href="#stone-hmi" aria-label="Permalink to &quot;STONE HMI&quot;">​</a></h1><p><img src="https://img.shields.io/badge/stone-blue?style=for-the-badge&amp;logo=stone&amp;logoColor=fff" alt="Stone"></p><p>Le HMI (Human Machine Interface) de la marque STONE permet d&#39;être utilisé comme interface pour l&#39;Arduino.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Pour établir la communication entre le HMI et l&#39;Arduino, on utilise une <a href="/bras/composants/4069.html">porte logique 4069</a>.</p></div><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>Le protocole de communication entre le HMI et l&#39;<a href="/bras/composants/arduino.html">Arduino</a> ne sont pas les mêmes !</p></div><h2 id="communication" tabindex="-1">Communication <a class="header-anchor" href="#communication" aria-label="Permalink to &quot;Communication&quot;">​</a></h2><p>La communication du HMI se fait en liaison série ainsi qu&#39;avec le protocole UART RS-232.</p><p>Ce qui est différent du HMI. Pour en savoir plus, aller voir la page du <a href="/bras/composants/hmi.html">HMI</a> et la page du <a href="/bras/composants/4069.html">4069</a></p><h2 id="oscilloscope" tabindex="-1">Oscilloscope <a class="header-anchor" href="#oscilloscope" aria-label="Permalink to &quot;Oscilloscope&quot;">​</a></h2><h3 id="trame-envoyee-vers-l-arduino" tabindex="-1">Trame envoyée vers l&#39;Arduino <a class="header-anchor" href="#trame-envoyee-vers-l-arduino" aria-label="Permalink to &quot;Trame envoyée vers l&#39;Arduino&quot;">​</a></h3><p>Les valeurs situées après les octets <code>0xE7 A0</code> ne sont pas à prendre en compte et servent uniquement à vérifier que le message ne comporte aucune erreur. <img src="https://raw.githubusercontent.com/kerogs/bras/refs/heads/main/assets/oscillo_trame_hmi_hex.png" alt="trame hmi"></p>',11),d={id:"trame-d-un-bouton",tabindex:"-1"},k=i("a",{class:"header-anchor",href:"#trame-d-un-bouton","aria-label":`Permalink to "Trame d'un bouton <Badge type="info" text="Documentation" />"`},"​",-1),u=a(`<p><img src="https://raw.githubusercontent.com/kerogs/bras/refs/heads/main/assets/hmi_instruction_button_trame.png" alt="trame hmi doc"></p><h2 id="json" tabindex="-1">JSON <a class="header-anchor" href="#json" aria-label="Permalink to &quot;JSON&quot;">​</a></h2><p>Lors de l&#39;envoi d&#39;une trame sur le HMI depuis une <a href="/bras/composants/arduino.html">Arduino</a>, cela se fait par un message qui passe par le port série (chez nous le numéro 3) et est reçu par le HMI via le format JSON.</p><p>Le message envoyé est composé de trois parties :</p><ol><li>Le début de la trame qui permet d&#39;indiquer son début au HMI. Il commence toujours par <code>ST&lt;</code>.</li><li>Le message composé en JSON.</li><li>La fin de la trame qui permet d&#39;indiquer la fin de cette dernière <code>&gt;ET</code>.</li></ol><h3 id="exemple-de-code" tabindex="-1">Exemple de code <a class="header-anchor" href="#exemple-de-code" aria-label="Permalink to &quot;Exemple de code&quot;">​</a></h3><h4 id="code-json" tabindex="-1">Code JSON <a class="header-anchor" href="#code-json" aria-label="Permalink to &quot;Code JSON&quot;">​</a></h4><p>Code JSON qui sera envoyé. Ici, le code permet de changer la couleur d&#39;arrière-plan d&#39;un widget (un élément) de l&#39;écran.</p><div class="language-JSON vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JSON</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;cmd_code&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;set_color&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;widget&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;widget&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dialog&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;color_object&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bg_color&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;color&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4294901760</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="code-arduino" tabindex="-1">Code arduino <a class="header-anchor" href="#code-arduino" aria-label="Permalink to &quot;Code arduino&quot;">​</a></h3><div class="language-c++ vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Serial3.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ST&lt;{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">cmd_code</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">set_color</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">type</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">widget</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">widget</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">dialog</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">color_object</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">bg_color</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">color</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:4294901760}&gt;ET&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="changement-de-couleur" tabindex="-1">Changement de couleur <a class="header-anchor" href="#changement-de-couleur" aria-label="Permalink to &quot;Changement de couleur&quot;">​</a></h3><p>Pour changer les couleurs sur le HMI, il suffit d&#39;appliquer la même logique que le code précédent. Néanmoins, il y a une règle à respecter : le code couleur doit être au format ARGB et doit également être en décimal. Ce décimal doit être la valeur totale du format ARGB qui est en hexadé</p><h4 id="exemple" tabindex="-1">Exemple : <a class="header-anchor" href="#exemple" aria-label="Permalink to &quot;Exemple :&quot;">​</a></h4><p>Prenons un exemple où nous souhaitons convertir une couleur bleue précise, ici : #0046a1ff =&gt; rgba(0, 70, 161, 1). Peu importe le format de la couleur, convertissez-la en hexadécimal pour plus de facilité.</p><ul><li>Tout d&#39;abord, récupérez la couleur en hex, ici <code>0046a1ff</code> (ou #0046a1 sans la transparence).</li></ul><div class="tip custom-block"><p class="custom-block-title">Rappel</p><p>Nous savons que dans la valeur #0046a1, 0x00 est la valeur rouge, 0x46 la valeur verte, 0xa1 la valeur bleue.</p></div><ul><li>Il suffit de rajouter le niveau de transparence devant le nombre, donc <code>FF0046a1</code>. FF étant la valeur maximum qui nous permet de ne pas avoir de transparence (0x00 étant le niveau invisible).</li><li>Une fois votre valeur récupérée, il suffit de convertir toute la valeur en ARGB. Ce qui va nous donner <code>4278208161</code>.</li><li>Il suffit d&#39;intégrer votre couleur ARGB dans la chaîne de message.</li></ul><div class="warning custom-block"><p class="custom-block-title">attention</p><p>Une fois la trame récupérée par le HMI, la valeur est convertie à nouveau en hexadécimal.</p></div><h3 id="activer-ou-desactiver" tabindex="-1">Activer ou Désactiver <a class="header-anchor" href="#activer-ou-desactiver" aria-label="Permalink to &quot;Activer ou Désactiver&quot;">​</a></h3><p>Vous pouvez également activer ou désactiver des éléments pour interagir avec eux. Pour cela, quelques valeurs changent. Par exemple, le <code>cmd_code</code> ainsi que la dernière information. La valeur color est complètement remplacée par <code>enable</code> suivi de son état, et la valeur <code>color_object</code> est supprimée.</p><table><thead><tr><th>true</th><th>Autorise l&#39;intéraction</th></tr></thead><tbody><tr><td>false</td><td>N&#39;autorise pas l&#39;interaction</td></tr></tbody></table><h3 id="code-json-1" tabindex="-1">Code JSON <a class="header-anchor" href="#code-json-1" aria-label="Permalink to &quot;Code JSON&quot;">​</a></h3><p>Ici, on indique l&#39;état du button1, désactivé, donc impossible d&#39;interagir avec.</p><div class="language-JSON vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JSON</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;cmd_code&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;set_enable&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;widget&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;widget&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;button1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;enable&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="code-arduino-1" tabindex="-1">Code arduino <a class="header-anchor" href="#code-arduino-1" aria-label="Permalink to &quot;Code arduino&quot;">​</a></h3><div class="language-c++ vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Serial3.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ST&lt;{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">cmd_code</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">set_enable</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">type</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">widget</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">widget</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">button1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">enable</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:false}&gt;ET&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="lien-utile" tabindex="-1">Lien utile <a class="header-anchor" href="#lien-utile" aria-label="Permalink to &quot;Lien utile&quot;">​</a></h2><ul><li><a href="https://raw.githubusercontent.com/kerogs/bras/refs/heads/main/assets/stone-hmi-Instruction-Sets-V2.5RC-20240105-datasheet.pdf" target="_blank" rel="noreferrer">DATASHEET</a></li></ul>`,29);function c(F,m,g,E,C,b){const e=n("Badge");return o(),l("div",null,[p,i("h3",d,[s("Trame d'un bouton "),r(e,{type:"info",text:"Documentation"}),s(),k]),u])}const v=t(h,[["render",c]]);export{q as __pageData,v as default};
